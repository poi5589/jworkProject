<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="mailMapper">
	
	<resultMap type="Mail" id="mailResultMap">
		<id column="mail_no" property="mailNo" />
		<result column="sender_no" property="senderNo" />
		<result column="sender" property="sender" />
		<result column="receiver" property="receiver" />
		<result column="mail_title" property="mailTitle" />
		<result column="mail_content" property="mailContent" />
		<result column="register_date" property="registerDate" />
		<result column="send" property="send" />
		
		<result column="mailbox_no" property="mailBoxNo" />
		<result column="emp_no" property="empNo" />
		<result column="emp_name" property="empName" />
		<result column="read" property="read" />
		<result column="read_date" property="readDate" />
		<result column="important" property="important" />
		<result column="type" property="type" />
		<result column="status" property="status" />
		<result column="cancel" property="cancel" />
		
		<result column="mailbox_name" property="mailBoxName" />
		<result column="receiver_no" property="receiverNo" />
		<result column="attachment" property="attachment" />
	</resultMap>
	
	<resultMap type="MailAt" id="mailAt">
		<id column="attachment_no" property="attachmentNo" />
		<result column="origin_name" property="originName" />
		<result column="change_name" property="changeName" />
		
	</resultMap>
	
	<resultMap type="Mail" id="mailResultMap2">
		<id column="mail_no" property="mailNo" />
		<result column="sender" property="sender" />
		<result column="receiver" property="receiver" />
		<result column="mail_title" property="mailTitle" />
		<result column="mail_content" property="mailContent" />
		<result column="register_date" property="registerDate" />
		<result column="attachment" property="attachment" />
		<!-- 컬렉션 사용 -->
		<collection property="mailList" ofType="Mail">
			<result column="cancel" property="cancel" />
			<result column="important" property="important" />
			<result column="read" property="read" />
			<result column="emp_name" property="empName" />
			<result column="emp_no" property="empNo" />
			<result column="read_date" property="readDate" />
		</collection>
	</resultMap>
	
	<resultMap type="Mail" id="mailAtResultMap">
		<id column="mail_no" property="mailNo" />
		<result column="sender_no" property="senderNo" />
		<result column="sender" property="sender" />
		<result column="receiver" property="receiver" />
		<result column="mail_title" property="mailTitle" />
		<result column="mail_content" property="mailContent" />
		<result column="register_date" property="registerDate" />
		<result column="send" property="send" />
		
		<result column="mailbox_no" property="mailBoxNo" />
		<result column="emp_no" property="empNo" />
		<result column="emp_name" property="empName" />
		<result column="read" property="read" />
		<result column="read_date" property="readDate" />
		<result column="important" property="important" />
		<result column="type" property="type" />
		<result column="status" property="status" />
		
		<result column="mailbox_name" property="mailBoxName" />
		<result column="receiver_no" property="receiverNo" />
		<result column="attachment" property="attachment" />
		<collection property="malist" resultMap="mailAt" />
	</resultMap>
	
	
	<select id="selectListCount" resultType="_int">
		select
		       count(*)
		  from mail m 
		  join mail_detail d on (m.mail_no = d.mail_no)
		 where 
		 	<choose>
			 	<when test='mailCategory == "휴지통"'>
			 			status = 'N' 
			 		and emp_no = #{empNo}
			 		and cancel is null
			 	</when>
			 	<otherwise>
			 		status = 'Y'
			 	</otherwise>
		    </choose>
		    <if test='mailCategory == "받은메일함"'>
		    	and type = 'R' 
		    	and emp_no = #{empNo}
		    	and mailbox_no is null 
		    	and send = 'Y'
		    	and cancel is null
		    </if>
		    <if test='mailCategory == "보낸메일함"'>
		    	and type = 'S' 
		    	and sender_no = #{empNo} 
		    	and mailbox_no is null 
		    	and send = 'Y'
		    </if>
		    <if test='mailCategory == "중요"'>
		    	and important = 'Y' 
		    	and emp_no = #{empNo}
		    	and cancel is null
		    </if>
		    <if test='mailCategory == "임시보관함"'>
		    	and send = 'N' 
		    	and emp_no = #{empNo}
		    </if>
		    <if test='mailCategory == "사용자메일함"'>
		    	and send = 'Y' 
		    	and mailbox_no = #{mailBoxNo}
		    	and cancel is null
		    </if>
		    <if test='mailCategory == "안읽은메일함"'>
		    	and read='N'
		    	and emp_no = #{empNo}
		    	and cancel is null
		    </if>
		   <if test='condition == "sender"'>
		   		and emp_no = #{empNo}
		   		and cancel is null
		   		and sender like '%' || #{keyword} || '%'
		   </if>
		   <if test='condition == "receiver"'>
		   		and emp_no = #{empNo}
		   		and cancel is null
		   		and receiver like '%' || #{keyword} || '%'
		   </if>
		   <if test='condition == "titleAndContent"'>
		   		and emp_no = #{empNo}
		   		and cancel is null
		   		and (mail_title like '%' || #{keyword} || '%'
		   		 or mail_content like '%' || #{keyword} || '%')
		   </if>
		   <if test='condition == "all"'>
		   		and emp_no = #{empNo}
		   		and cancel is null
		   		and (sender like '%' || #{keyword} || '%'
		   		 or receiver like '%' || #{keyword} || '%'
		   		 or mail_title like '%' || #{keyword} || '%'
		   		 or mail_content like '%' || #{keyword} || '%')
		   </if>
	</select>
	
	<select id="selectUnReadListCount" resultType="_int">
		select
		       count(*)
		  from mail m 
		  join mail_detail d on (m.mail_no = d.mail_no)
		 where 
		 	<choose>
			 	<when test='mailCategory == "휴지통"'>
			 			status = 'N' 
			 		and emp_no = #{empNo}
			 		and cancel is null
			 	</when>
			 	<otherwise>
			 		status = 'Y'
			 	</otherwise>
		    </choose>
		    <if test='mailCategory == "받은메일함"'>
		    	and type = 'R' 
		    	and emp_no = #{empNo}
		    	and mailbox_no is null 
		    	and send = 'Y'
		    	and cancel is null
		    </if>
		    <if test='mailCategory == "보낸메일함"'>
		    	and type = 'S' 
		    	and sender_no = #{empNo} 
		    	and mailbox_no is null 
		    	and send = 'Y'
		    </if>
		    <if test='mailCategory == "중요"'>
		    	and important = 'Y' 
		    	and emp_no = #{empNo}
		    	and cancel is null
		    </if>
		    <if test='mailCategory == "임시보관함"'>
		    	and send = 'N' 
		    	and emp_no = #{empNo}
		    </if>
		    <if test='mailCategory == "사용자메일함"'>
		    	and send = 'Y' 
		    	and mailbox_no = #{mailBoxNo}
		    	and cancel is null
		    </if>
		    <if test='mailCategory == "안읽은메일함"'>
		    	and read='N'
		    	and emp_no = #{empNo}
		    	and cancel is null
		    </if>
		    <if test='condition == "sender"'>
		   		and emp_no = #{empNo}
		   		and cancel is null
		   		and sender like '%' || #{keyword} || '%'
		   </if>
		   <if test='condition == "receiver"'>
		   		and emp_no = #{empNo}
		   		and cancel is null
		   		and receiver like '%' || #{keyword} || '%'
		   </if>
		   <if test='condition == "titleAndContent"'>
		   		and emp_no = #{empNo}
		   		and cancel is null
		   		and (mail_title like '%' || #{keyword} || '%'
		   		 or mail_content like '%' || #{keyword} || '%')
		   </if>
		   <if test='condition == "all"'>
		   		and emp_no = #{empNo}
		   		and cancel is null
		   		and (sender like '%' || #{keyword} || '%'
		   		 or receiver like '%' || #{keyword} || '%'
		   		 or mail_title like '%' || #{keyword} || '%'
		   		 or mail_content like '%' || #{keyword} || '%')
		   </if>
		    and read = 'N'
	</select>
	
	<select id="selectMailList" resultMap="mailResultMap2">
		select
		       m.mail_no
		     , d.important
		     , d.read
		     , m.sender
		     , m.receiver
		     , d.emp_name
		     , d.emp_no
		     , m.mail_title
		     , d.cancel
		     , m.mail_content
		     , to_char(m.register_date, 'YYYY.MM.DD HH24:MI:SS') "register_date"
		     , (select count(*) from mail_at where mail_no = m.mail_no) "attachment"
     		 , to_char(d.read_date, 'YYYY.MM.DD HH24:MI:SS') "read_date"
		  from mail m 
		  join mail_detail d on (m.mail_no = d.mail_no)
		 where 
		 	<choose>
			 	<when test='mailCategory == "휴지통"'>
			 			status = 'N' 
			 		and emp_no = #{empNo}
			 		and cancel is null
			 	</when>
			 	<otherwise>
			 		
			 	</otherwise>
		    </choose>
		    <if test='mailCategory == "받은메일함"'>
		    	type = 'R'
		    	and emp_no = #{empNo}
		    	and mailbox_no is null 
		    	and send = 'Y'
		    	and cancel is null
		    	and status = 'Y'
		    </if>
		    <if test='mailCategory == "보낸메일함"'>
		    	type = 'R'
		    	and m.mail_no in (select mail_no
		    						from mail_detail
		    					   where status ='Y' and type = 'S')
		    	and sender_no = #{empNo} 
		    	and mailbox_no is null 
		    	and send = 'Y'
		    </if>
		    <if test='mailCategory == "중요"'>
		    	important = 'Y' 
		    	and emp_no = #{empNo}
		    	and cancel is null
		    	and status = 'Y'
		    </if>
		    <if test='mailCategory == "임시보관함"'>
		    	send = 'N'
		    	and emp_no = #{empNo}
		    	and status = 'Y'
		    </if>
		    <if test='mailCategory == "사용자메일함"'>
		    	send = 'Y' 
		    	and mailbox_no = #{mailBoxNo}
		    	and cancel is null
		    	and status = 'Y'
		    </if>
		    <if test='mailCategory == "안읽은메일함"'>
		    	read='N'
		    	and emp_no = #{empNo}
		    	and cancel is null
		    	and status = 'Y'
		    </if>
		    <if test='condition == "sender"'>
		   		emp_no = #{empNo}
		   		and cancel is null
		   		and sender like '%' || #{keyword} || '%'
		   		and status = 'Y'
		   </if>
		   <if test='condition == "receiver"'>
		   		emp_no = #{empNo}
		   		and cancel is null
		   		and receiver like '%' || #{keyword} || '%'
		   		and status = 'Y'
		   </if>
		   <if test='condition == "titleAndContent"'>
		   		emp_no = #{empNo}
		   		and cancel is null
		   		and status = 'Y'
		   		and (mail_title like '%' || #{keyword} || '%'
		   		 or mail_content like '%' || #{keyword} || '%')
		   </if>
		   <if test='condition == "all"'>
		   		emp_no = #{empNo}
		   		and cancel is null
		   		and status = 'Y'
		   		and (sender like '%' || #{keyword} || '%'
		   		 or receiver like '%' || #{keyword} || '%'
		   		 or mail_title like '%' || #{keyword} || '%'
		   		 or mail_content like '%' || #{keyword} || '%')
		   </if>
		 order
		    by register_date desc
	</select>
	
	<select id="selectMailBoxList" resultMap="mailResultMap">
		select
		       mailbox_no
		     , mailbox_name
		  from mailbox
		 where emp_no = #{empNo}
		 order
		    by enroll_date
	</select>
	
	<update id="updateMailBox">
		update
		       mailbox
		   set mailbox_name = #{mailBoxName}
		 where mailbox_no = #{mailBoxNo}
	</update>
	
	<insert id="insertMailBox">
		insert
		  into mailbox
		     (
		       mailbox_no
		     , mailbox_name
		     , enroll_date
		     , emp_no
		     )
		values
		     (
		       seq_mbno.nextval
		     , #{mailBoxName}
		     , sysdate
		     , #{empNo}
		     )
	</insert>
	
	<select id="selectMailBox" resultMap="mailResultMap">
		select 
		       mailbox_no
		     , mailbox_name
		  from mailbox
		 where mailbox_name = #{mailBoxName}
		   and emp_no = #{empNo}
	</select>
	
	<update id="updateMailsWithMailBox">
		update
		       mail_detail
		   set status = 'N'
		 where mailbox_no = #{mailBoxNo}
	</update>
	
	<delete id="deleteMailBox">
		delete
		  from mailbox
		 where mailbox_no = #{mailBoxNo}
	</delete>
	
	<update id="moveMail">
		update
			   mail_detail
		   set status = #{status}
		   <choose>
			 	<when test="mailBoxNo == 0">
			 		, mailbox_no = null
			 	</when>
			 	<otherwise>
			 		, mailbox_no = #{ mailBoxNo }
			 	</otherwise>
		   </choose>
		   <if test='type == "R" or type == "S"'>
		 	, type = #{type}
		   </if>
		 where mail_no = #{ mailNo }
		   and emp_no = #{ empNo }
	</update>
	
	<update id="updateImportant">
		update
		       mail_detail
		   set important = #{important}
		 where mail_no = #{mailNo}
		   and emp_no = #{empNo}
	</update>
	
	<insert id="sendMail">
		insert
		  into mail
		     (
		       mail_no
		     , sender_no
		     , sender
		     , receiver
		   <if test="mailTitle != ''">
		     , mail_title
		   </if>
		     , mail_content
		     , register_date
		     , send
		     , receiver_no
		     )
		values 
		     (
		       seq_mno.nextval
		     , #{senderNo}
		     , #{sender}
		     , #{receiver}
		   <if test="mailTitle != ''">
		     , #{mailTitle}
		   </if>
		     , #{mailContent}
		     , sysdate
		     , #{send}
		     , #{receiverNo}
		     )
	</insert>
	
	<insert id="insertMailDetail">
		insert
		  into mail_detail
		     (
		       mail_no
		     , emp_no
		     , emp_name
		     
		   <if test='"S".equals(type)'>
		     , read
		     , read_date
		   </if>
		   	 , type
		     )
		values 
		     (
		     <choose>
		     	<when test='mailNo == ""'>
		     		seq_mno.currval
		     	</when>
		     	<otherwise>
		     		#{mailNo}
		     	</otherwise>
		     </choose>
		     , #{empNo}
		     , #{empName}
		   <if test='"S".equals(type)'>
		     , 'Y'
	    	 , sysdate
		   </if>
		   	 , #{type}
		     )
	</insert>
	
	<select id="selectThisMailNo" resultType="_int">
		select 
		       seq_mno.currval 
		  from dual
	</select>
	
	<insert id='insertMailAt'>
		insert
		  into mail_at
		     (
		       attachment_no
		     , origin_name
		     , change_name
		     , mail_no
		     )
		values
		     (
		       seq_matno.nextval
		     , #{originName}
		     , #{changeName}
		     <choose>
		     	<when test='mailNo == ""'>
		     		,seq_mno.currval
		     	</when>
		     	<otherwise>
		     		,#{mailNo}
		     	</otherwise>
		     </choose>
		     )
	</insert>
	
	<update id="updateMailRead">
		update
		       mail_detail
		   set read = #{read}
	     <if test='readDate == "" or readDate == null'>
	    	 , read_date = sysdate
	     </if>
	     where mail_no = #{mailNo}
	       and emp_no = #{empNo}
	       and type = 'R'
	</update>
	
	<select id="selectMail" resultMap="mailAtResultMap">
		select md.*
		     , attachment_no
		     , origin_name
		     , change_name
		  from (select rownum, detail.*
		          from (select 
		                       mail_no
		                     , sender_no
		                     , sender
		                     , receiver
		                     , mail_title
		                     , mail_content
		                     , to_char(register_date, 'YYYY.MM.DD HH24:MI:SS') "register_date"
		                     , send
		                     , receiver_no
		                     , important
		                  from mail
		                  join mail_detail using (mail_no)
		                 where mail_no = #{ mailNo }
		                   and emp_no = #{ empNo }) detail
		            where rownum = 1) md
		  left join mail_at ma on (ma.mail_no = md.mail_no)
	</select>
	
	<update id="updateMail">
		update
		       mail
		   set receiver = #{receiver}
		     , mail_title = #{mailTitle}
		     , mail_content = #{mailContent}
		     , register_date = sysdate
		     , send = #{send}
		     , receiver_no = #{receiverNo}
		 where mail_no = #{mailNo}
	</update>
	
	<delete id="deleteMailAt">
		delete
		  from mail_at
		 where attachment_no = #{attachmentNo}
	</delete>
	
	<delete id="deleteMail">
		delete
		  from mail_detail
		 where mail_no = #{ mailNo }
		   and emp_no = #{ empNo }
	</delete>
	
	<update id="cancelSend">
		update
		       mail_detail
		   set cancel = 'Y'
		 where mail_no = #{mailNo}
		   and emp_no = #{empNo}
	</update>
	
	<select id="savedMailCount" resultType="_int">
		select
	           count(*)
	      from mail
	      left
	      join mail_detail using (mail_no)
	     where send = 'N'
	       and status = 'Y'
	       and sender_no = #{empNo}
	</select>
	
</mapper>
