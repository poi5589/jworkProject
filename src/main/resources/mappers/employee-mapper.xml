<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="employeeMapper">

	<resultMap id="employeeResult" type="Employee">
		<id column="emp_no" property="empNo" />
		<result column="emp_pwd" property="empPwd"></result>
		<result column="emp_name" property="empName"></result>
		<result column="gender" property="gender"></result>
		<result column="phone" property="phone"></result>
		<result column="email" property="email"></result>
		<result column="birth" property="birth"></result>
		<result column="dept_code" property="deptCode"></result>
		<result column="dept_name" property="deptName"></result>
		<result column="team_code" property="teamCode"></result>
		<result column="team_name" property="teamName"></result>
		<result column="job_code" property="jobCode"></result>
		<result column="job_name" property="jobName"></result>
		<result column="emp_phone" property="empPhone"></result>
		<result column="enroll_date" property="enrollDate"></result>
		<result column="resign_date" property="resignDate"></result>
		<result column="modify_date" property="modifyDate"></result>
		<result column="profile_url" property="profileUrl"></result>
		<result column="task" property="task"></result>
		<result column="status" property="status"></result>
		<result column="account_status" property="accountStatus"></result>
		<result column="emp_fav" property="empFav"></result>
		<result column="att_no" property="attNo"></result>
		<result column="start_time" property="startTime"></result>
		<result column="end_time" property="endTime"></result>
		<result column="att_date" property="attDate"></result>
		<!-- 외부 주소록 -->
		<result column="addout_no" property="addoutNo"></result>
		<result column="addout_fav" property="addoutFav"></result>
		<result column="date_fav" property="dateFav"></result>
		<result column="name" property="name"></result>
		<result column="biz_name" property="bizName"></result>
		<result column="dept" property="dept"></result>
		<result column="job" property="job"></result>
		<result column="biz_phone" property="bizPhone"></result>
		<result column="memo" property="memo"></result>
		<result column="group_no" property="groupNo"></result>
		<result column="group_no" property="group"></result>
		<result column="group_name" property="groupName"></result>
		<!-- 일정 -->
		<result column="group_color" property="groupColor"></result>
		<!-- <result column="" property=""></result> -->
	</resultMap>
	
	<resultMap id="deptResult" type="Department">
		<id column="dept_code" property="deptCode" />
		<result column="dept_name" property="deptName"></result>
		<result column="status" property="status"></result>
	</resultMap>
	
	<resultMap id="teamResult" type="Team">
		<id column="team_code" property="teamCode" />
		<result column="team_name" property="teamName"></result>
		<result column="status" property="status"></result>
		<result column="dept_code" property="deptCode"></result>
	</resultMap>
	
	<resultMap id="jobResult" type="Job">
		<id column="job_code" property="jobCode" />
		<result column="job_name" property="jobName"></result>
		<result column="status" property="status"></result>
	</resultMap>
	
	<!-- 조직도 조회 resultMap -->
	<resultMap id="chartResult" type="Department">
		<result column="dept_name" property="deptName" />
		<collection property="teamList" ofType="Team">
			<result column="team_name" property="teamName"/>
			<collection property="empList" ofType="Employee">
				<result column="job_name" property="jobName"/>
				<result column="emp_no" property="empNo"/>
				<result column="emp_name" property="empName"/>
			</collection>
		</collection>
	</resultMap>
	
	<!-- 일정 -->
	<resultMap id="scheduleResult" type="Schedule">
		<id column="sch_no" property="schNo" />
		<result column="sch_title" property="schTitle"></result>
		<result column="sch_content" property="schContent"></result>
		<result column="sch_begin" property="schBegin"></result>
		<result column="sch_end" property="schEnd"></result>
		<result column="time_begin" property="timeBegin"></result>
		<result column="time_end" property="timeEnd"></result>
		<result column="group_no" property="groupNo"></result>
		<result column="group_name" property="groupName"></result>
		<result column="group_color" property="groupColor"></result>
		<result column="sch_place" property="schPlace"></result>
		<result column="create_date" property="createDate"></result>
		<result column="modify_date" property="modifyDate"></result>
		<result column="status" property="status"></result>
		<result column="emp_no" property="empNo"></result>
		<result column="emp_name" property="empName"></result>
		<result column="attendance" property="attendance"></result>
	</resultMap>
	
	
	<!-- 로그인 -->
	<select id="loginEmployee" resultMap="employeeResult">
		select
			   e.emp_no
			 , emp_pwd
			 , emp_name
			 , gender
			 , phone
			 , email
			 , birth
			 , e.dept_code
			 , dept_name
			 , e.team_code
			 , team_name
			 , e.job_code
			 , job_name
			 , emp_phone
			 , to_char(enroll_date, 'YYYY-MM-DD') as "enroll_date"
			 , to_char(resign_date, 'YYYY-MM-DD') as "resign_date"
			 , to_char(modify_date, 'YYYY-MM-DD') as "modify_date"
			 , profile_url
			 , task
			 , e.status
			 , account_status
			 , NVL(start_time,'') as "start_time"
			 , NVL(end_time, '') as "end_time"
		  from employee e
          left join department d on (e.dept_code = d.dept_code)
          left join team t on (e.team_code = t.team_code)
          left join job j on (e.job_code = j.job_code)
          left join attendence a on (e.emp_no = a.emp_no)
		 where e.status = 'Y'
		   and account_status = 'Y'
		   and e.emp_no = #{empNo}
		   and att_date = '23/03/22'
	</select>
	
	<!-- 사원 정보 수정 -->
	<update id="updateEmployee">
		update
		       employee
		   set email = #{email}
		     , phone = #{phone}
		     , emp_phone = #{empPhone}
		     , birth = #{birth}
		     , task = #{task}
		     , modify_date = sysdate
		 where emp_no = #{empNo}
	</update>
	
	<!-- 프로필 이미지 수정 -->
	<update id="updateProfileImg">
		update
			   employee
		   set profile_url = #{profileUrl}
		     , modify_date = sysdate
		 where emp_no = #{empNo}
	</update>
	
	<!-- 결재선 선택시 사원조회리스트(ajax)  -->
	<select id="ajaxSelectEmpList" resultMap="employeeResult"> 
		select
		      emp_no
		    , emp_name
		    , dept_name
		    , team_name
		    , job_name
	     from employee e
	     join department d on (e.dept_code=d.dept_code)
	     join team t on (e.team_code=t.team_code)
	     join job j on (e.job_code=j.job_code)
	    where e.status='Y' 
	    order
	       by t.team_code, j.job_code
	</select>
		
	<select id="ajaxSelectDeptList" resultMap="deptResult">
		select
			 dept_code
		   , dept_name
		from department
	   where status= 'Y'
	</select>
	
	<select id="ajaxSelectTeamList" resultMap="teamResult">
		select
			 team_code
		   , team_name
		   , dept_code
		from team
	   where status= 'Y'
	</select>
	
	<!-- 사내 주소록 리스트 조회  -->
	<select id="selectAddressInListCount" resultType="_int">
		select
		       count(*)
		  from employee
		 where status = 'Y'
	</select>
	<select id="selectAddressInList" resultMap="employeeResult">
		select
		       e.emp_no
		     , emp_name
		     , dept_name
		     , team_name
		     , job_name
		     , email
		     , phone
		     , emp_phone
		     , task
		     , (select
		               1
		          from address_fav
		         where emp_no = #{empNo}
		           and emp_fav = e.emp_no) as "emp_fav"
		  from employee e
		  left join department d on (e.dept_code=d.dept_code)
		  left join team t on (e.team_code=t.team_code)
		  left join job j on (e.job_code=j.job_code)
		 where e.status='Y'
		   and j.job_code >= 2
		 order
		    by j.job_code desc
	</select>
	
	<!-- 개인 주소록 리스트 조회 -->
	<select id="selectAddressOutListCount" resultType="_int">
		select
		       count(*)
		  from address_out
		 where status = 'Y'
	</select>
	<select id="selectAddressOutList" resultMap="employeeResult">
       select
		 	   addout_no
		     , name
		     , biz_name
		     , dept
		     , job
		     , email
		     , phone
		     , biz_phone
		     , memo
		     , (select
		               1
		          from address_fav
		         where emp_no = #{empNo}
		           and addout_fav = addout_no) as "addout_fav"
		  from address_out
		 where status='Y'
		   and emp_no = #{empNo}
	</select>
	
	<!-- 사내 주소록 상세 조회 페이지(ajax) -->
	<select id="ajaxSelectAddressEmployee" resultMap="employeeResult">
		select
	           e.emp_no
	         , emp_name
	         , dept_name
	         , team_name
	         , job_name
	         , email
	         , phone
	         , emp_phone
	         , task
	         , profile_url
	         , (select
	                   1
	              from address_fav
	             where emp_no = #{loginNo} <!-- 로그인한 유저 사원번호 -->
	               and emp_fav = e.emp_no) as "emp_fav"
	     from employee e
	     left join department d on (e.dept_code=d.dept_code)
	     left join team t on (e.team_code=t.team_code)
	     left join job j on (e.job_code=j.job_code)
	    where e.emp_No = #{empNo} <!-- 조회할 유저 사원번호 -->
	</select>	
	
	<!-- 사내 주소록 검색 -->
	<select id="selectAddressInSearchCount" resultType="_int">
		select
		       count(*)
		  from employee e
		  left join team t on (e.team_code=t.team_code)
		 where e.status = 'Y'
		   <if test="condition == 'empNo'">
		   and emp_no    	<!-- 사번으로 검색시 -->
		   </if>
		   <if test="condition == 'empName'">
		   and emp_name   	<!-- 이름으로 검색시 -->
		   </if>
		   <if test="condition == 'teamName'">
		   and team_name   	<!-- 부서로 검색시 -->
		   </if>
		        like '%' || #{keyword} || '%'
	</select>
	
	<select id="selectAddressInSearchList" resultMap="employeeResult">
		select
		       e.emp_no
		     , emp_name
		     , dept_name
		     , team_name
		     , job_name
		     , email
		     , phone
		     , emp_phone
		     , task
		     , (select
		               1
		          from address_fav
		         where emp_no = #{empNo}
		           and emp_fav = e.emp_no) as "emp_fav"
		  from employee e
		  left join department d on (e.dept_code=d.dept_code)
		  left join team t on (e.team_code=t.team_code)
		  left join job j on (e.job_code=j.job_code)
		 where e.status='Y'
		   and j.job_code >= 2
		 <choose>
		 	<when test="condition == 'empNo'">
		   		and emp_no  
		    </when>
		    <when test="condition == 'empName'">
		  		and emp_name  
		  	</when>
		  	<otherwise>		    
		   		and team_name  
		   	</otherwise> 
		 </choose>
		        like '%' || #{keyword} || '%'
		 order
		    by d.dept_code desc
	</select>
	
	<!-- 사내 주소록 즐겨찾기 -->
	<insert id="ajaxInsertAddressFav">
		insert
		  into address_fav
			 (
			   emp_no
			 , emp_fav
			 , date_fav
			 )
		values
			 (
			   #{loginNo}	<!-- 즐겨찾기한사원번호(로그인한사원번호) -->
			 , #{empNo} 	<!-- 즐겨찾기된사원번호 -->
			 , sysdate
			 )
	</insert>
	
	<!-- 사내 주소록 즐겨찾기 해제 -->
	<update id="ajaxDeleteAddressFav">
		delete 
		  from address_fav
		 where emp_fav = #{empNo}	<!-- 즐겨찾기된사원번호 -->
		   and emp_no = #{loginNo} 	<!-- 로그인한사원번호 -->
	</update>
	
	<!-- 개인 주소록 상세 조회 페이지(ajax) -->
	<select id="ajaxSelectAddressOut" resultMap="employeeResult">
		select
			   addout_no
		     , name
		     , biz_name
		     , dept
		     , job
		     , email
		     , phone
		     , biz_phone
		     , memo
		     , group_no
		     , (select
		               1
		          from address_fav
		         where emp_no = #{loginNo} <!-- 로그인한 유저 사원번호 -->
		           and addout_fav = addout_no) as "addout_fav"
		  from address_out
		 where addout_no = #{addoutNo} <!-- 조회할 개인주소록 번호 -->
	</select>	
	
	<!-- 개인 주소록 상세 수정 -->
	<update id="updateAddressOut">
		update
	       address_out
	   set name = #{name}
	     , biz_name = #{bizName}
	     , dept = #{dept}
	     , job = #{job}
	     , email = #{email}
	     , phone = #{phone}
	     , biz_phone = #{bizPhone}
	     , memo = #{memo}
	     , group_no =#{groupNo}
	 where addout_no = #{addoutNo} 	<!-- 조회한 개인주소록 번호 -->
	   and emp_no = #{loginNo}	<!-- 로그인한 유저 사원번호 -->
	</update>

	<!-- 메일 사원번호 입력시 사원조회 서비스 -->
	<select id="selectEmployee" resultMap="employeeResult">
		select
		       emp_no
		     , emp_name
		  from employee
		 where emp_no = #{empNo}
	</select>
	
	<!-- 개인 주소록 검색 -->
	<select id="selectAddressOutSearchCount" resultType="_int">
		select
		       count(*)
		  from address_out o
		  left join address_gr g on (g.emp_no=o.emp_no)
		 where o.status = 'Y'
		   and o.group_no = g.group_no
		   <if test="condition == 'name'">
		   and name    		<!-- 이름으로 검색시 -->
		   </if>
		   <if test="condition == 'groupName'">
		   and group_name   <!-- 그룹으로 검색시 -->
		   </if>
		   <if test="condition == 'bizName'">
		   and biz_name   	<!-- 회사이름으로 검색시 -->
		   </if>
		        like '%' || #{keyword} || '%'
	</select>
	
	<select id="selectAddressOutSearchList" resultMap="employeeResult">
		select
		 	   addout_no
		     , name
		     , biz_name
		     , dept
		     , job
		     , email
		     , phone
		     , biz_phone
		     , memo
		     , group_name
		     , (select
		               1
		          from address_fav
		         where emp_no = #{empNo}
		           and addout_fav = addout_no) as "addout_fav"
		  from address_out o
		  left join address_gr g on (g.emp_no=o.emp_no)
		 where o.status='Y'
		   and o.group_no = g.group_no
		   and o.emp_no = #{empNo}
		 <choose>
		 	<when test="condition == 'name'">
		   		and name  
		    </when>
		    <when test="condition == 'groupName'">
		   		and group_name  
		    </when>
		  	<otherwise>		    
		   		and biz_name  
		   	</otherwise> 
		 </choose>
		        like '%' || #{keyword} || '%'
	</select>
	
	<!-- 개인 주소록 즐겨찾기 -->
	<insert id="ajaxInsertAddressOutFav">
		insert
		  into address_fav
			 (
			   emp_no
			 , addout_fav
			 , date_fav
			 )
		values
			 (
			   #{loginNo}	<!-- 즐겨찾기한사원번호(로그인한사원번호) -->
			 , #{addoutNo} 	<!-- 즐겨찾기된개인주소록번호 -->
			 , sysdate
			 )
	</insert>
	
	<!-- 개인 주소록 즐겨찾기 해제 -->
	<update id="ajaxDeleteAddressOutFav">
		delete 
		  from address_fav
		 where addout_fav = #{addoutNo}	<!-- 즐겨찾기된사원번호 -->
		   and emp_no = #{loginNo} 		<!-- 로그인한사원번호 -->
	</update>
	
	<!-- 주소록 그룹 조회 -->
	<select id="ajaxSelectAddressGroup" resultMap="employeeResult">
		select
			   group_no
			 , group_name
		  from address_gr
		 where emp_no = #{empNo} <!-- 로그인한사원번호 -->
		 order
		    by group_no
	</select>
	
	<!-- 주소록 그룹 수정 -->
	<select id="ajaxSelectAddGroupName" resultMap="employeeResult">
		select group_name
    	  from address_gr
   		 where group_no = #{groupNo}
	</select>
	<update id="updateAddGroupName">
		 update
		        address_gr
		    set group_name = #{groupName} 
		  where group_no = #{groupNo} 
	</update>
	
	<!-- 주소록 그룹 삭제 -->
	<delete id="ajaxDeleteAddGroup">
		delete 
		  from address_gr
		 where group_no = #{groupNo}
	</delete>
	<update id="ajaxUpdateAddoutGrNo">
		update
		       address_out
		   set group_no = 0 
         where group_no = #{groupNo} 
	</update>
	
	<!-- 주소록 그룹 추가 -->
	<insert id="insertAddressGroup">
		insert
			   into address_gr
			   (
			     group_no
			   , group_name
			   , emp_no
			   )
			   VALUES
			   (
			     seq_agrno.nextval	
			   , #{groupName}
			   , #{loginNo}
			   )
	</insert>
	
	<!-- 주소록 연락처 추가 -->
	<insert id="insertAddressOut">
		insert
			   into address_out
			   (
			     addout_no
			   , name
			   , biz_name
			   , dept
			   , job
			   , email
			   , phone
			   , biz_phone
			   , memo
			   , group_no
			   , emp_no
			   )
			   VALUES
			   (
			     SEQ_ADNO.NEXTVAL
			   , #{name}
			   , #{bizName}
			   , #{dept}
			   , #{job}
			   , #{email}
			   , #{phone}
			   , #{bizPhone}
			   , #{memo}
			   , #{group}
			   , #{loginNo}
			   )
	</insert>
	<insert id="insertAddressOutFav">
		insert
		  into address_fav
			 (
			   emp_no
			 , addout_fav
			 , date_fav
			 )
		values
			 (
			   #{loginNo}			<!-- 즐겨찾기한사원번호(로그인한사원번호) -->
			 , SEQ_ADNO.CURRVAL 	<!-- 잘 모르겠음 --><!-- 즐겨찾기된개인주소록번호 -->
			 , sysdate
			 )
	</insert>
	
	<!-- 주소록 연락처 삭제 -->
	<update id="deleteAddressOut">
		update
		       address_out
		   set status = 'N'
		 where addout_no = #{addoutNo}
	</update>
	
	<!-- 즐겨찾기된 사내 주소록 리스트 조회 -->
	<select id="favAddressInListCount" resultType="_int">
		select
		       count(*)
		  from address_fav
		 where emp_no = #{loginNo}
           and emp_fav is not null
	</select>
	<select id="ajaxFavAddressInList" resultMap="employeeResult">
	   select
		       e.emp_no
		     , emp_name
		     , dept_name
		     , team_name
		     , job_name
		     , email
		     , phone
		     , emp_phone
		     , task
		     , (select
		               1
		          from address_fav
		         where emp_no = #{loginNo}
		           and emp_fav = e.emp_no) as "emp_fav"
		  from employee e
		  left join department d on (e.dept_code=d.dept_code)
		  left join team t on (e.team_code=t.team_code)
		  left join job j on (e.job_code=j.job_code)
		 where e.status='Y'
		   and j.job_code >= 2
           and (select
		               1
		          from address_fav
		         where emp_no = #{loginNo}
		           and emp_fav = e.emp_no )= 1
		 order
		    by j.job_code desc
	</select>
	
	<!-- 즐겨찾기된 개인 주소록 리스트 조회 -->
	<select id="favAddressOutListCount" resultType="_int">
		select
		       count(*)
		  from address_fav
		 where emp_no = #{loginNo}
           and addout_fav is not null
	</select>
	<select id="ajaxFavAddressOutList" resultMap="employeeResult">
		select
		 	   addout_no
		     , name
		     , biz_name
		     , dept
		     , job
		     , email
		     , phone
		     , biz_phone
		     , memo
             , group_no
		     , (select
		               1
		          from address_fav
		         where emp_no = o.emp_no
		           and addout_fav = addout_no) as "addout_fav"
		  from address_out o
		 where o.status='Y'
		   and o.emp_no = #{empNo}
           and (select
		               1
		          from address_fav
		         where emp_no = o.emp_no
		           and addout_fav = addout_no) = 1
	</select>
	
	<!-- 캘린더 그룹 조회 -->
	<select id="ajaxSelectSchGroup" resultMap="employeeResult">
		select
			   group_no
			 , group_name
             , group_color
		  from sch_group
		 where emp_no = #{loginNo}
		 order
		    by group_no
	</select>
	
	<!-- 캘린더 그룹 수정 -->
	<select id="ajaxSelectSchGroupName" resultMap="employeeResult">
		select 
               group_name
             , group_color
    	  from sch_group
   		 where group_no = #{groupNo}
	</select>
	<update id="updateSchGroupName">
		 update
		        sch_group
		    set group_name = #{groupName}
              , group_color = #{groupColor}
		  where group_no = #{groupNo} 
	</update>
	
	<!-- 캘린더 그룹 삭제 -->
	<delete id="ajaxDeleteSchGroup">
		delete 
		  from sch_group
		 where group_no = #{groupNo}
	</delete>
	<update id="ajaxUpdateSchGrNo">
		update
		       schedule
		   set group_no = 0 
         where group_no = #{groupNo} 
	</update>
	
	<!-- 캘린더 그룹 추가 -->
	<insert id="insertSchGroup">
		insert
			   into sch_group
			   (
			     group_no
			   , group_name
               , group_color
			   , emp_no
			   )
			   VALUES
			   (
			     seq_sgrno.nextval	
			   , #{groupName}
               , #{groupColor}
			   , #{loginNo}
			   )
	</insert>
	
	<!-- 부서 관리 - 부서 추가 -->
	<insert id="insertDept">
		insert
			   into department
			   (
			     dept_code
			   , dept_name
			   )
			   VALUES
			   (
			     SEQ_DNO.nextval	
			   , #{deptName}
			   )
	</insert>
	
	<!-- 부서 관리 - 부서 삭제 -->
	<update id="ajaxDeleteDept">
		update
		       department
		   set status = 'N' 
         where dept_code = #{deptCode} 
	</update>
	
	<!-- 부서 관리 - 팀 추가 -->
	<insert id="insertTeam">
		insert
			   into team
			   (
			     team_code
			   , team_name
               , dept_code
			   )
			   VALUES
			   (
			     SEQ_TNO.nextval	
			   , #{teamName}
               , #{deptCode}
			   )
	</insert>
	
	<!-- 부서 관리 - 팀 삭제 -->
	<update id="ajaxDeleteTeam">
		update
		       team
		   set status = 'N' 
         where team_code = #{teamCode} 
	</update>
	
	<!-- 부서 관리 - 직급 조회 -->
	<select id="ajaxSelectJobList" resultMap="jobResult">
		select
			 job_code
		   , job_name
		from job
	   where status= 'Y'
	</select>
	
	<!-- 부서 관리 - 직급 추가 -->
	<insert id="insertJob">
		insert
			   into job
			   (
			     job_code
			   , job_name
			   )
			   VALUES
			   (
			     SEQ_JNO.nextval	
			   , #{jobName}
			   )
	</insert>
	
	<!-- 부서 관리 - 직급 삭제 -->
	<update id="ajaxDeleteJob">
		update
		       job
		   set status = 'N' 
         where job_code = #{jobCode} 
	</update>
	
	<!-- 조직도 조회 -->
	<select id="selectEmployeeChart" resultMap="chartResult">
		select
		       nvl2(dept_name, dept_name, '사장') "dept_name"
		     , nvl2(team_name, team_name, '임원') "team_name"
		     , job_name
		     , e.emp_no
		     , e.emp_name
		  from employee e
		  full outer join department d on (d.dept_code = e.dept_code)
		  left join team t on (t.team_code = e.team_code)
		  left join job j on (j.job_code = e.job_code)
		 order by d.dept_code nulls first, t.team_code nulls first, j.job_code	
	</select>
	
	<!-- 일정 등록 -->
	<insert id="insertSchedule">
		insert
		  into schedule
		     (
		       sch_no
             , emp_no
		     , sch_title
		     , sch_content
		     , sch_begin
             , sch_end
             , time_begin
             , time_end
             , group_no
             , sch_place
             , create_date
		     )
		values 
		     (
		       SEQ_SCHNO.nextval	<!-- 일정번호 -->
		     , #{loginNo}			<!-- 로그인한 사원번호 -->
		     , #{schTitle}
		     , #{schContent}
             , #{schBegin}
		     , #{schEnd}
             , #{timeBegin}
             , #{timeEnd}
		     , #{groupNo}
		     , #{schPlace}
		     , sysdate
		     )
	</insert>
	<!-- 일정 등록 - 참석자 추가 -->
	<insert id="insertAttendee">
		insert
		  into sch_attendee
		     (
		       sch_no
             , emp_no
		     )
		values 
		     (
		       SEQ_SCHNO.CURRVAL	<!-- 일정번호 -->
             , #{empNo}				<!-- 참석자 사원번호 -->
		     )
	</insert>
	
	<!-- 주소록 - 조직도 조회 -->
	<select id="ajaxAddressInChart" resultMap="chartResult">
		select 
		       dept_name
		     , team_name
		  from employee e
		  left join department d on (d.dept_code = e.dept_code)
		  left join team t on (t.team_code = e.team_code)
         where d.status = 'Y'
           and t.status = 'Y'
         group by dept_name, team_name
         order by dept_name
	</select>
	
	<!-- 결재자 추가 -->
	<select id="addSigner" resultMap="employeeResult">
		select
	           emp_no
	         , emp_name
	         , nvl2(dept_name, dept_name, '사장') "dept_name"
	         , job_name
          from employee e
          left join department d on (e.dept_code = d.dept_code)
	      left join job j on (e.job_code = j.job_code)
	     where emp_no = #{empNo}
	</select>
		
	<!-- 일정 조회 -->
	<!-- 
	<select id="ajaxSelectMySchedule" resultMap="scheduleResult">
		select distinct
               s.sch_no
             , sch_title
             , sch_content
             , sch_begin
             , sch_end
             , time_begin
             , time_end
             , s.group_no
             , g.group_name
             , g.group_color
             , sch_place
             , create_date
             , modify_date
         from schedule s
         left join sch_group g on (s.group_no = g.group_no)
         left join sch_attendee a on (s.sch_no = a.sch_no)
        where status = 'Y'
          and (s.emp_no = #{loginNo} or a.emp_no = #{loginNo})
	</select>
	<select id="ajaxSelectAttSchedule" resultMap="scheduleResult">
		select 
               a.sch_no
             , sch_title
             , sch_content
             , sch_begin
             , sch_end
             , time_begin
             , time_end
             , sch_place
         from sch_attendee a
         join schedule s on (s.sch_no = a.sch_no)
        where status = 'Y'
          and a.emp_no = #{loginNo}
	</select>
	-->
	
	<!-- 이거 쓰기 -->
	<select id="ajaxSelectSchedule" resultMap="scheduleResult">
		select
               s.sch_no
             , sch_title
             , sch_content
             , sch_begin
             , sch_end
             , time_begin
             , time_end
             , s.group_no
             , g.group_name
             , g.group_color
             , sch_place
             , create_date
             , modify_date
         from schedule s
         left join sch_group g on (s.group_no = g.group_no)
         left join sch_attendee a on (s.sch_no = a.sch_no)
        where status = 'Y'
          and s.emp_no = #{loginNo}
        union
        select 
               a.sch_no
             , sch_title
             , sch_content
             , sch_begin
             , sch_end
             , time_begin
             , time_end
             , (select 0
                  from sch_group
                 where not emp_no in #{loginNo})
             , (select ''
                  from sch_group
                 where not emp_no in #{loginNo})
             , (select 'black'
                  from sch_group
                 where not emp_no in #{loginNo})
             , sch_place
             , create_date
             , modify_date
         from sch_attendee a
         left join schedule s on (s.sch_no = a.sch_no)
         left join sch_group g on (s.group_no = g.group_no)
        where status = 'Y'
          and a.emp_no = #{loginNo}
	</select>
	
	
	
	<!-- 일정 상세 조회 -->
	<select id="ajaxSelectSchDetail" resultMap="scheduleResult">
		select distinct
			   s.emp_no
             , sch_title
             , sch_content
             , sch_begin
             , sch_end
             , time_begin
             , time_end
             , s.group_no
             , g.group_name
             , g.group_color
             , sch_place
             , (select count(*)
                  from sch_attendee
                 where sch_no = #{schNo}) as attendance <!-- 참석자 있는지 여부 알기 위해서 -->
         from schedule s
         left join sch_group g on (s.group_no = g.group_no)
         left join sch_attendee a on (s.sch_no = a.sch_no)
        where status = 'Y'
          and s.sch_no = #{schNo}
	</select>
	<select id="ajaxSelectAttDetail" resultMap="scheduleResult">
		select 
               a.emp_no		<!-- 참석자 사원번호 -->
             , e.emp_name
          from sch_Attendee a
          join employee e on (e.emp_no = a.emp_no)
         where sch_no = #{schNo}
	</select>
	
	<!-- 일정 수정 -->
	<update id="updateSchedule">
		update
			   schedule
		   set sch_title = #{schTitle}
             , sch_content = #{schContent}
             , sch_begin = #{schBegin}
             , sch_end = #{schEnd}
             , time_begin = #{timeBegin}
             , time_end = #{timeEnd}
             , group_no = #{groupNo}
             , sch_place = #{schPlace}
		     , modify_date = sysdate
		 where sch_no = #{schNo}
	</update>
	<delete id="deleteAttendee">
		delete 
		  from sch_attendee
		 where sch_no = #{schNo}
	</delete>
	<insert id="updateAttendee">
		insert
		  into sch_attendee
		     (
		       sch_no
             , emp_no
		     )
		values 
		     (
		       #{schNo}
             , #{empNo}
             )
	</insert>
	
	<!-- 일정 삭제 -->
	<update id="ajaxDeleteSchedule">
		update
			   schedule
		   set status = 'N'
		 where sch_no = #{schNo}
		   and emp_no = #{loginNo}
	</update>
</mapper>
