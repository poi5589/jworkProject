<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="essMapper">
	
	<resultMap id="attendenceResult" type="Attendence">
		<id column="att_no" property="attNo" />
		<result column="emp_no" property="empNo" />
		<result column="start_time" property="startTime" />
		<result column="end_time" property="endTime" />
		<result column="att_time" property="attTime" />
		<result column="att_status" property="attStatus" />
		<result column="att_date" property="attDate" />
		<result column="after_time" property="afterTime" />
	</resultMap>
	
	<resultMap id="annualResult" type="Annual">
		<id column="annual_no" property="annualNo" />
		<result column="emp_no" property="empNo" />
		<result column="emp_name" property="empName" />
		<result column="dept_name" property="deptName" />
		<result column="job_name" property="jobName" />
		<result column="enroll_date" property="enrollDate" />
		<result column="annual_count" property="annualCount" />
		<result column="annual_create" property="annualCreate" />
		<result column="annual_use" property="annualUse" />
		<result column="annual_date" property="annualDate" />
		<result column="annual_category" property="annualCategory" />
	</resultMap>
	
	<resultMap id="businesstripResult" type="Businesstrip">
		<id column="bt_no" property="btNo" />
		<result column="emp_no" property="empNo" />
		<result column="dept_code" property="deptCode" />
		<result column="team_code" property="teamCode" />
		<result column="emp_name" property="empName" />
		<result column="dept_name" property="deptName" />
		<result column="job_name" property="jobName" />
		<result column="bt_start" property="btStart" />
		<result column="bt_end" property="btEnd" />
		<result column="bt_content" property="btContent" />
		<result column="bt_status" property="btStatus" />
		<result column="bt_check" property="btCheck" />
		<result column="enroll_date" property="enrollDate" />
		<result column="first_date" property="firstDate" />
		<result column="second_date" property="secondDate" />
		<result column="fail_date" property="failDate" />
		<result column="first_approval" property="firstApproval" />
		<result column="second_approval" property="secondApproval" />
	</resultMap>
	
	<resultMap id="leaveResult" type="Leave">
		<id column="leave_no" property="leaveNo" />
		<result column="emp_no" property="empNo" />
		<result column="emp_name" property="empName" />
		<result column="dept_name" property="deptName" />
		<result column="job_code" property="jobCode" />
		<result column="dept_code" property="deptCode" />
		<result column="team_code" property="teamCode" />
		<result column="job_name" property="jobName" />
		<result column="leave_category" property="leaveCategory" />
		<result column="lcategory_name" property="lcName" />
		<result column="leave_start" property="leaveStart" />
		<result column="leave_end" property="leaveEnd" />
		<result column="leave_content" property="leaveContent" />
		<result column="leave_status" property="leaveStatus" />
		<result column="leave_check" property="leaveCheck" />
		<result column="enroll_date" property="enrollDate" />
		<result column="first_date" property="firstDate" />
		<result column="second_date" property="secondDate" />
		<result column="fail_date" property="failDate" />
		<result column="first_approval" property="firstApproval" />
		<result column="second_approval" property="secondApproval" />
	</resultMap>
	
	<resultMap id="leaveCategoryResult" type="LeaveCategory">
		<id column="lcategory_no" property="lcNo" />
		<result column="lcategory_name" property="lcName" />
	</resultMap>
	
	<resultMap id="overtimeResult" type="Overtime">
		<id column="ot_no" property="otNo" />
		<result column="emp_no" property="empNo" />
		<result column="dept_code" property="deptCode" />
		<result column="team_code" property="teamCode" />
		<result column="emp_name" property="empName" />
		<result column="dept_name" property="deptName" />
		<result column="job_name" property="jobName" />
		<result column="enroll_date" property="enrollDate" />
		<result column="ot_category" property="otCategory" />
		<result column="ot_start" property="otStart" />
		<result column="ot_end" property="otEnd" />
		<result column="ot_content" property="otContent" />
		<result column="ot_status" property="otStatus" />
		<result column="ot_check" property="otCheck" />
		<result column="first_date" property="firstDate" />
		<result column="second_date" property="secondDate" />
		<result column="fail_date" property="failDate" />
		<result column="first_approval" property="firstApproval" />
		<result column="second_approval" property="secondApproval" />
	</resultMap>
	
	<resultMap id="worktimeResult" type="Worktime">
		<id column="wt_no" property="wtNo" />
		<result column="att_no" property="attNo" />
		<result column="re_start_time" property="reStartTime" />
		<result column="re_end_time" property="reEndTime" />
		<result column="re_content" property="reContent" />
	</resultMap>
	
	<!-- 휴가등록화면조회 -->
	<select id="selectLeaveCategory" resultMap="leaveCategoryResult">
		select
		        lcategory_no,
		        lcategory_name
		   from leave_category
		  where lcategory_no = #{no}
	</select>
	
	<!-- 휴가등록화면 잔여연차 -->
	<select id="selectAnnualCount" resultMap="annualResult">
		select 
		        annual_count
		   from annual
		  where emp_no = #{empNo} 
	</select>
	
	<!-- 휴가등록 -->
	<insert id="insertLeave">
		insert 
		  into leave
		  (
		  	leave_no
		  , emp_no
		  , dept_code
		  , team_code
		  , leave_category
		  , leave_start
		  , leave_end
		  , leave_content
		  , enroll_date
		  )
		  values
		  (
		  	seq_leno.nextval
		  , #{empNo}
		  , #{deptCode}
		  , #{teamCode}
		  , #{leaveCategory}
		  , #{leaveStart}
		  , #{leaveEnd}
		  , #{leaveContent}
		  , sysdate
		  )
	</insert> 
	
	<!-- 휴가페이징 -->
	<select id="selectLeaveListCount" resultType="_int">
		select
		       count(*)
		  from leave
		 where leave_status = 'Y'
		   and emp_no = #{empNo}
	</select>
	
	<!-- 휴가리스트조회 -->
	<select id="selectLeaveList" resultMap="leaveResult">
		select 
		       leave_no
		     , l.emp_no
		     , emp_name
		     , dept_name
		     , lcategory_name
		     , leave_start
		     , leave_end
		     , decode(leave_check,0,'결재대기(1차)',1,'결재대기(2차)',2,'승인',3,'반려') as "leave_check"
		  from leave l
		  join employee e on (l.emp_no = e.emp_no)
		  join department d on (e.dept_code = d.dept_code)
		  join leave_category c on (l.leave_category = c.lcategory_no)
		 where leave_status = 'Y' 
		   and l.emp_no = #{empNo}
		 order
		    by leave_no desc
	</select>
	
	<!-- 휴가상세조회 -->
	<select id="selectLeaveDetail" resultMap="leaveResult">
		select 
		       leave_no
		     , l.emp_no
		     , lcategory_name
		     , leave_start
		     , leave_end
		     , leave_content
		  from leave l
		  join employee e on (l.emp_no = e.emp_no)
		  join leave_category c on (l.leave_category = c.lcategory_no)
		 where leave_status = 'Y' 
		   and l.emp_no = #{empNo}
		   and leave_no = #{leaveNo}
	</select>
	
	<!-- 휴가신청삭제 -->
	<update id="deleteLeave">
		update leave
		   set leave_status = 'N'
		 where leave_no = #{leaveNo}
	</update>
	
	<!-- 관리자 : 휴가전체조회페이징 -->
	<select id="adminSelectLeaveListCount" resultType="_int">
		select
		       count(*)
		  from leave
		 where leave_status = 'Y'
	</select>
	
	<!-- 관리자 : 휴가전체조회 -->
	<select id="adminSelectLeaveList" resultMap="leaveResult">
		select 
		       leave_no
		     , l.emp_no
		     , emp_name
		     , dept_name
		     , job_name
		     , l.enroll_date
		     , lcategory_name
		     , leave_start
		     , leave_end
		     , decode(leave_check,0,'결재대기(1차)',1,'결재대기(2차)',2,'승인',3,'반려') as "leave_check"
		  from leave l
		  join employee e on (l.emp_no = e.emp_no)
		  join department d on (e.dept_code = d.dept_code)
		  join job j on (e.job_code = j.job_code)
		  join leave_category c on (l.leave_category = c.lcategory_no)
		 where leave_status = 'Y' 
		 order
		    by leave_no desc
	</select>
	
	<!-- 관리자 : 휴가상세조회  -->
	<select id="adminLeaveDetail" resultMap="leaveResult">
		select 
		       leave_no
		     , l.emp_no
		     , emp_name
		     , e.dept_code
		     , dept_name
		     , e.team_code
		     , e.job_code
		     , job_name
		     , l.enroll_date
		     , lcategory_name
		     , leave_content
		     , leave_start
		     , leave_end
		     , fail_date
		     , second_date
		  from leave l
		  join employee e on (l.emp_no = e.emp_no)
		  join department d on (e.dept_code = d.dept_code)
		  join job j on (e.job_code = j.job_code)
		  join leave_category c on (l.leave_category = c.lcategory_no)
		 where leave_status = 'Y'
		   and leave_no = #{leaveNo} 
	</select>
	
	<!-- 관리자 : 휴가결재선 반려 -->
	<update id="adminReturnLeave">
		update leave
		   set fail_date = sysdate
		     , leave_check = 3
		 where leave_no = #{leaveNo}
	</update>
	
	<!-- 관리자 : 연차부여(한달)  -->
	<update id="adminUpdateMonth">
		<![CDATA[
		update annual a
		   set annual_count = annual_count + 1
		     , annual_date = sysdate
		     , annual_category = 1
		 where a.emp_no in (
							select
       								emp_no
  							   from employee e
 							  where to_char(add_months(e.enroll_date, 12), 'YYYY-MM-DD') > to_char(TRUNC(SYSDATE, 'YYYY') ,'YYYY-MM-DD')
						   )
		]]>
	</update>
	
	
	<!-- 관리자 : 연차부여(일년) -->
	<update id="adminUpdateYear">
		<![CDATA[
		update annual a
		   set annual_count = annual_count + 15
		     , annual_date = sysdate
		     , annual_category = 1
		where a.emp_no in (
							select
       								emp_no
  							   from employee e
 							  where to_char(add_months(e.enroll_date, 12), 'YYYY-MM-DD') < to_char(TRUNC(SYSDATE, 'YYYY') ,'YYYY-MM-DD')
						  )
		]]>
	</update>
	
	<!-- 관리자 : 연차관리 페이징 -->
	<select id="adminAnnualListCount" resultType="_int">
		select
		       count(*)
		  from annual
	</select>
	
	<!-- 관리자 : 연차관리 전체조회 -->
	<select id="adminAnnualList" resultMap="annualResult">
		select
		       e.emp_no
		     , emp_name
		     , dept_name
		     , job_name
		     , (select annual_count from annual a where annual_category = 1 and a.emp_no = e.emp_no) as "annual_create"
		     , (select annual_count from annual a where annual_category = 2 and a.emp_no = e.emp_no) as "annual_use"
		     , annual_count
		     , to_char(e.enroll_date, 'yyyy-mm-dd') as "enroll_date"
		  from employee e
		  join annual a on (e.emp_no = a.emp_no)
		  join department d on (e.dept_code = d.dept_code)
		  join job j on (e.job_code = j.job_code)
		 order
		    by e.emp_no desc
	</select>
	
	<!-- 시간외근무등록 -->
	<insert id="insertOvertime">
		insert
		  into overtime
		  (
		  	ot_no
		  , emp_no
		  , dept_code
		  , team_code
		  , enroll_date
		  , ot_category
		  , ot_start
		  , ot_end
		  , ot_content
		  )
		  values
		  (
		  	seq_otno.nextval
		  , #{empNo}
		  , #{deptCode}
		  , #{teamCode}
		  , #{enrollDate}
		  , #{otCategory}
		  , #{otStart}
		  , #{otEnd}
		  , #{otContent}
		  )
	</insert>
	
	<!-- 출장등록 -->
	<insert id="insertBusinesstrip">
		insert 
		  into businesstrip
		  (
		  	bt_no
		  , emp_no
		  , dept_code
		  , team_code
		  , bt_start
		  , bt_end
		  , bt_content
		  )
		  values
		  (
		  	seq_btno.nextval
		  , #{empNo}
		  , #{deptCode}
		  , #{teamCode}
		  , #{btStart}
		  , #{btEnd}
		  , #{btContent}
		  )
	</insert>
	
	<!-- 시간외근무페이징 -->
	<select id="selectOvertimeListCount" resultType="_int">
		select 
		       count(*)
		  from overtime
		 where ot_status = 'Y'
		   and emp_no = #{empNo} 
	</select>
	
	<!-- 출장페이징 -->
	<select id="selectBusinesstripListCount" resultType="_int">
		select 
		       count(*)
		  from businesstrip
		 where bt_status = 'Y'
		   and emp_no = #{empNo}
	</select>
	
	<!-- 시간외근무조회 -->
	<select id="selectOvertimeList" resultMap="overtimeResult">
		select 
			   ot_no
			 , o.emp_no	
		     , emp_name
		     , dept_name
		     , o.enroll_date
		     , decode(ot_category,0,'시간외근무',1,'야간',2,'주말') as "ot_category"
		     , ot_start
		     , ot_end
		     , decode(ot_check,0,'결재대기(1차)',1,'결재대기(2차)',2,'승인',3,'반려') as "ot_check"
		     , ot_content  
		  from overtime o
		  join employee e on (o.emp_no = e.emp_no)
		  join department d on (e.dept_code = d.dept_code)
		 where ot_status = 'Y'
		   and o.emp_no = #{empNo}
		 order
		    by ot_no desc
	</select>
	
	<!-- 출장조회 -->
	<select id="selectBusinesstripList" resultMap="businesstripResult">
		select 
		       bt_no
		     , b.emp_no
		     , emp_name
		     , dept_name
		     , bt_start
		     , bt_end
		     , decode(bt_check,0,'결재대기(1차)',1,'결재대기(2차)',2,'승인',3,'반려')as "bt_check"
		     , bt_content
		  from businesstrip b
		  join employee e on (e.emp_no = b.emp_no)
		  join department d on (e.dept_code = d.dept_code)
		 where bt_status = 'Y'
		   and b.emp_no = #{empNo}
		 order
		    by bt_no desc
	</select>
	
	<!-- 출장살세조회 -->
	<select id="selectBusinesstrip" resultMap="businesstripResult">
		select 
		       bt_no
		     , bt_start
		     , bt_end
		     , bt_content
		  from businesstrip 
		 where bt_status = 'Y'
		   and bt_no = #{btNo}
	</select>
	
	<!-- 시간외근무상세조회 -->
	<select id="selectOvertime" resultMap="overtimeResult">
		select 
			   ot_no
		     , o.enroll_date
		     , decode(ot_category,0,'시간외근무',1,'야간',2,'주말') as "ot_category"
		     , ot_start
		     , ot_end
		     , ot_content  
		  from overtime o
		  join employee e on (o.emp_no = e.emp_no)
		  join department d on (e.dept_code = d.dept_code)
		 where ot_status = 'Y'
		   and ot_no = #{otNo}
	</select>
	
	<!-- 시간외근무삭제 -->
	<update id="deleteOvertime">
		update overtime
		   set ot_status = 'N'
		 where ot_no = #{otNo}
	</update>
	
	<!-- 츌장삭제 -->
	<update id="deleteBusinesstrip">
		update businesstrip
		   set bt_status = 'N'
		 where bt_no = #{btNo}
	</update>
	
	<!-- 관리자 : 시간외근무페이징 -->
	<select id="adminSelectOvertimeListCount" resultType="_int">
		select 
		       count(*)
		  from overtime
		 where ot_status = 'Y'	
	</select>
	
	<!-- 관리자 : 출장페이징 -->
	<select id="adminSelectBusinesstripListCount" resultType="_int">
		select 
		       count(*)
		  from businesstrip
		 where bt_status = 'Y'
	</select>
	
	<!-- 관리자 : 시간외근무 조회 -->
	<select id="adminSelectOvertimeList" resultMap="overtimeResult">
		select 
			   ot_no
			 , o.emp_no	
		     , emp_name
		     , dept_name
		     , job_name
		     , o.enroll_date
		     , decode(ot_category,0,'시간외근무',1,'야간',2,'주말') as "ot_category"
		     , ot_start
		     , ot_end
		     , decode(ot_check,0,'결재대기(1차)',1,'결재대기(2차)',2,'승인',3,'반려') as "ot_check"
		     , ot_content  
		  from overtime o
		  join employee e on (o.emp_no = e.emp_no)
		  join department d on (e.dept_code = d.dept_code)
		  join job j on (e.job_code = j.job_code)
		 where ot_status = 'Y'
		 order
		    by ot_no desc
	</select>
	
	<!-- 관리자 : 출장 조회 -->
	<select id="adminSelectBusinessetripList" resultMap="businesstripResult">
		select 
		       bt_no
		     , b.emp_no
		     , emp_name
		     , dept_name
		     , job_name
		     , b.enroll_date
		     , bt_start
		     , bt_end
		     , decode(bt_check,0,'결재대기(1차)',1,'결재대기(2차)',2,'승인',3,'반려')as "bt_check"
		     , bt_content
		  from businesstrip b
		  join employee e on (e.emp_no = b.emp_no)
		  join department d on (e.dept_code = d.dept_code)
		  join job j on (e.job_code = j.job_code)
		 where bt_status = 'Y'
		 order
		    by bt_no desc
	</select>
	
	<!-- 관리자 : 출장상세조회 --> 
	<select id="adminSelectBusinesstrip" resultMap="businesstripResult">
		select 
		       bt_no
		     , emp_name
		     , dept_name
		     , bt_start
		     , bt_end
		     , bt_content
		     , fail_date
		     , second_date
		  from businesstrip b
		  join employee e on (e.emp_no = b.emp_no)
		  join department d on (e.dept_code = d.dept_code)
		 where bt_status = 'Y'
		   and bt_no = #{btNo}
	</select>
	
	<!-- 관리자 : 시간외근무상세조회 -->
	<select id="adminSelectOvertime" resultMap="overtimeResult">
		select 
			   ot_no
		     , emp_name
		     , dept_name
		     , o.enroll_date
		     , decode(ot_category,0,'시간외근무',1,'야간',2,'주말') as "ot_category"
		     , ot_start
		     , ot_end
		     , ot_content  
		     , fail_date
		     , second_date
		  from overtime o
		  join employee e on (o.emp_no = e.emp_no)
		  join department d on (e.dept_code = d.dept_code)
		 where ot_status = 'Y'
		   and ot_no = #{otNo}
	</select>
	
	<!-- 관리자 : 출장1차결재선 
	<update id="adminUpdateFirstBusinesstrip">
		update businesstrip
		   set first_date = #{firstDate}
		     , first_approval = #{firstNo}
		     , bt_check = 1
		 where bt_no = #{btNo}
	</update>
	-->
	
	<!-- 관리자 : 출장2차결재선 
	<update id="adminUpdateSecondBusinesstrip">
		update businesstrip
		   set second_date = #{secondDate}
		     , second_approval = #{secondNo}
		     , bt_check = 2
		 where bt_no = #{btNo}
	</update>
	-->
	
	<!-- 관리자 : 출장 반려 -->
	<update id="adminReturnBusinesstrip">
		update businesstrip
		   set fail_date = sysdate
		     , bt_check = 3
		 where bt_no = #{btNo}
	</update>
	
	<!-- 관리자 : 시간외근무1차결재선 
	<update id="adminUpdateFirstOvertime">
		update overtime
		   set first_date = #{firstDate}
		     , first_approval = #{firstNo}
		     , ot_check = 1
		 where ot_no = #{otNo}
	</update>
	-->
	
	<!-- 관리자 : 시간외근무2차결재선 
	<update id="adminUpdateSecondOvertime">
		update overtime
		   set second_date = #{secondDate}
		     , second_approval = #{secondNo}
		     , ot_check = 2
		 where ot_no = #{otNo}
	</update>
	-->
	
	<!-- 관리자 : 시간외근무 반려 -->
	<update id="adminReturnOvertime">
		update overtime
		   set fail_date = sysdate
		     , ot_check = 3
		 where ot_no = #{otNo}
	</update>
	

</mapper>
