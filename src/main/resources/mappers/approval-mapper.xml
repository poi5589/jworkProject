<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="approvalMapper">

	<resultMap id="approvalResult" type="Approval">
		<id column="app_no" property="appNo"/>
		<result column="doc_no" property="docNo"/>
		<result column="emp_no" property="empNo"/>
		<result column="doc_type" property="docType"/>
		<result column="create_date" property="createDate"/>
		<result column="update_date" property="updateDate"/>
		<result column="doc_title" property="docTitle"/>
		<result column="doc_content" property="docContent"/>
		<result column="doc_originname" property="docOriginName"/>
		<result column="doc_filepath" property="docFilePath"/>
		<result column="app_status" property="appStatus"/>
		<result column="doc_status" property="docStatus"/>
		<result column="app_count" property="appCount"/>
		<result column="app_turn" property="appTurn"/>
		<result column="emp_name" property="empName"/>
		<result column="doc_name" property="docName"/>
		<result column="job_name" property="jobName"/>
		<result column="re_reason" property="reReason"/>
		<result column="quit_date" property="quitDate"/>
		<result column="target_no" property="targetNo"/>
	</resultMap>
	
	<resultMap id="appLineResult" type="AppLine">
		<id column="line_no" property="lineNo"/>
		<result column="app_no" property="appNo"/>
		<result column="emp_no" property="empNo"/>
		<result column="app_level" property="appLevel"/>
		<result column="confirm_status" property="confirmStatus"/>
		<result column="app_date" property="appDate"/>
		<result column="re_reason" property="reReason"/>
		<result column="emp_name" property="empName"/>
		<result column="job_name" property="jobName"/>
	</resultMap>
	
	<resultMap id="referenceResult" type="Reference">
		<id column="ref_no" property="refNo"/>
		<result column="app_no" property="appNo"/>
		<result column="emp_no" property="empNo"/>
		<result column="check_date" property="checkDate"/>
	</resultMap>
	
	
	<!-- 게시글 수 카운트 -->
	<select id="selectListCount" resultType="_int">
		select count(*)
		  from approval
		 where doc_status='Y'
		   and emp_no = #{empNo}
		   <if test="appStatus != 100">
		   and app_status = #{appStatus}
		   </if>
		   
	</select>
	
	
	<!-- 버튼 눌렀을 시 리스트 조회 -->
	<select id="ajaxSelectBtn" resultMap="approvalResult">
		select  
	      	   app_no
	     	 , doc_no
	         , emp_name
	         , decode(doc_type,0,'기안서',1,'품의서',2,'사직서') as "doc_type"
	         , to_char(create_date, 'YYYY-MM-DD')"create_date"
	         , update_date
	         , doc_title
	         , doc_originname
	         , decode(app_status,0,'결재대기',1,'진행중',2,'결재완료',3,'반려',4,'임시저장') as "app_status"
		  from approval 
		  join employee using (emp_no)
		 where doc_status='Y'
		 <if test="appStatus != 100">
		   and app_status = #{appStatus}
		 </if>
		   and emp_no = #{empNo}
		 order
		    by create_date desc
	</select>
	
	<!-- 문서 상세 조회 -->
	<select id="selectApproval" resultMap="approvalResult">
		select  
		      app_no
		    , doc_no
		    , emp_name
		    , job_name
		    , doc_type
		    , decode(doc_type,0,'기안서',1,'품의서',2,'사직서') as "doc_name"
		    , to_char(create_date, 'YYYY-MM-DD')"create_date"
		    , update_date
		    , doc_title
		    , doc_content
		    , doc_originname
		    , doc_filepath
		    , decode(app_status,0,'결재대기',1,'진행중',2,'결재완료',3,'반려',4,'임시저장') as "app_status"
		    , app_count
		    , app_turn
		    , QUIT_DATE
		 from approval a
		  join employee e on (e.emp_no = a.emp_no)
		 join job j on (e.job_code = j.job_code)
		where doc_status in ('Y','D')
		  and app_no = #{appNo}
	</select>
	
	<!-- 문서 상세 조회 시 결재선 -->
	 <select id="selectAppLine" resultMap="appLineResult">
	   select
			  line_no
			, al.app_no
			, al.emp_no
			, emp_name
			, job_name
			, app_level
			, confirm_status
			, re_reason
	     from app_line al
	     join employee e on (e.emp_no = al.emp_no)
		 join job j on (e.job_code = j.job_code)
	    where al.app_no=#{appNo}
	    order
	       by app_level
	    
	 </select>
	
	<!-- 미결재 문서 게시글 수 카운트 -->
	<select id="selectUnsignListCount" resultType="_int">
		select
		       count(*)
		  from approval ap
		  join app_line al on (ap.app_no = al.app_no)
		 where al.emp_no = #{empNo}
		   and confirm_status = 0
		   
	</select>
	
	<!-- 미결재 리스트 조회 -->
	<select id="selectUnsignList" resultMap="approvalResult">
		select  
	          ap.app_no
	        , emp_name
	        , decode(doc_type,0,'기안서',1,'품의서',2,'사직서') as "doc_type"
	        , to_char(create_date, 'YYYY-MM-DD')"create_date"
	        , doc_title
	        , doc_originname
	        , decode(app_status,0,'결재대기',1,'진행중',2,'결재완료',3,'반려',4,'임시저장') as "app_status"
	     from approval ap
	     join employee e on (ap.emp_no = e.emp_no)
	     join app_line al on (ap.app_no = al.app_no)
	    where doc_status='Y'
	      and confirm_status = 0
	      and al.emp_no = #{empNo}
	      and app_status in (0,1)
	    order
	       by create_date desc
      
    </select>
    
    <!-- 결재 문서 게시글 수 카운트 -->
	<select id="selectSignListCount" resultType="_int">
		select
		       count(*)
		  from approval ap
		  join app_line al on (ap.app_no = al.app_no)
		 where al.emp_no = #{empNo}
		   and confirm_status not in (0)
		   
	</select>
    
    <!-- 결재리스트 조회 -->
	<select id="selectSignList" resultMap="approvalResult">
		select  
	          ap.app_no
	        , emp_name
	        , decode(doc_type,0,'기안서',1,'품의서',2,'사직서') as "doc_type"
	        , to_char(create_date, 'YYYY-MM-DD')"create_date"
	        , doc_title
	        , doc_originname
	        , decode(app_status,0,'결재대기',1,'진행중',2,'결재완료',3,'반려',4,'임시저장') as "app_status"
	     from approval ap
	     join employee e on (ap.emp_no = e.emp_no)
	     join app_line al on (ap.app_no = al.app_no)
	    where doc_status='Y'
	      and al.confirm_status not in (0)
	      and al.emp_no = #{empNo}
	    order
	       by create_date desc
    </select>
    
     <!-- 임시저장함 문서 게시글 수 카운트 -->
	<select id="selectdraftListCount" resultType="_int">
		select
		       count(*)
		  from approval
		 where emp_no = #{empNo}
		   and app_status = 4
		   and doc_status = 'D'
		 order
	        by app_no desc
	</select>
    
    <!-- 임시저장함 리스트 조회 -->
	<select id="selectdraftList" resultMap="approvalResult">
		select  
	          ap.app_no
	        , emp_name
	        , decode(doc_type,0,'기안서',1,'품의서',2,'사직서') as "doc_type"
	        , to_char(create_date, 'YYYY-MM-DD')"create_date"
	        , doc_title
	        , doc_originname
	        , decode(app_status,0,'결재대기',1,'진행중',2,'결재완료',3,'반려',4,'임시저장') as "app_status"
	     from approval ap
	     join employee e on (ap.emp_no = e.emp_no)
	    where doc_status = 'D'
	      and app_status = 4
	      and ap.emp_no = #{empNo}
	    order
	       by create_date desc
    </select>
    
    <!-- 문서 삭제 -->
    <update id="deleteApproval">
    	update approval
   		   set doc_status = 'N'
         where app_no = #{appNo}
    </update>
    
    <!-- 승인 버튼 눌렀을때 app_line-->
    <update id="signBtn">
    	update app_line
  		   set 
               confirm_status = 1
             , app_date = sysdate 
         where app_no= #{appNo}
           and emp_no = #{empNo}
   		   and app_level = (select app_turn
	                          from approval
	                         where app_no=#{appNo})
    </update> 
    <!-- 승인 올라가면 문서상태  -->
    <update id="signStatus">
		update approval
		   set app_status = 
          				    case
			                when app_count = app_turn then 2
			                else 1 
			                 end
             , app_turn =   
             				 case
			                 when app_count != app_turn then app_turn+1
			                 else app_turn
			                  end
  		 where app_no=#{appNo}
    </update> 
    
     <!-- 반려 버튼 눌렀을때 app_line-->
    <update id="returnBtn">
    	update app_line
  		   set 
               confirm_status = 2
             , re_reason = #{reReason}
         where app_no= #{appNo}
           and emp_no = #{empNo}
   		   and app_level = (select app_turn
	                          from approval
	                         where app_no=#{appNo})
    </update> 
    
    <!-- 반려 올라가면 문서상태  -->
    <update id="returnStatus">
		update approval
		   set app_status = 3
  		 where app_no=#{appNo}
    </update> 
    
    <!-- 임시저장 -->
    <insert id="saveApproval">
    	 insert 
	       into approval
			  (
				 APP_NO
			   , EMP_NO
			   , DOC_TYPE
			   , DOC_TITLE
			   , DOC_CONTENT
			   , DOC_ORIGINNAME
			   , DOC_FILEPATH
			   , APP_STATUS
			   , DOC_STATUS
			   , QUIT_DATE
			   )
		  values
			   (
				 SEQ_APNO.nextval
				, #{empNo}
				, #{docType}
				, #{docTitle}
				, #{docContent}
				, #{docOriginName}
				, #{docFilePath}
				, 4
				, 'D'
				, #{quitDate}
			)
    
    </insert>
    
    <!-- 새문서 insert -->
    <insert id="insertNewApp">
    	insert 
		  into  approval
		     (
			    APP_NO
		      , DOC_NO
		      , EMP_NO
		      , DOC_TYPE
		      , CREATE_DATE
		      , DOC_TITLE
		      , DOC_CONTENT
		      , DOC_ORIGINNAME
		      , DOC_FILEPATH
		      , APP_STATUS
		      , DOC_STATUS
		      , APP_COUNT
		      , APP_TURN
		      , QUIT_DATE
		      )
		values
		      (
				SEQ_APNO.nextval
				<if test="docType == 0">
			  , '기안2023-'||(select count(doc_no)+1
							   from approval
				              where doc_no like '기안%')
				</if>
				<if test="docType == 1">
			  , '품의2023-'||(select count(doc_no)+1
							   from approval
				              where doc_no like '품의%')
				</if>
				<if test="docType == 2">
			  , '사직2023-'||(select count(doc_no)+1
							   from approval
				              where doc_no like '사직%')
				</if>
			  , #{empNo}
			  , #{docType}
			  , sysdate
			  , #{docTitle}
			  , #{docContent}
			  , #{docOriginName}
			  , #{docFilePath}
			  , 0
			  , 'Y'
			  , #{appCount}
			  , 1
			  , #{quitDate}
			    )
    </insert>
    
    <!-- 결재선 insert -->
    <insert id="insertNewAppLine">
	    insert 
	      into app_line
			 (
			   LINE_NO
			 , APP_NO
			 , EMP_NO
			 , APP_LEVEL
			 , CONFIRM_STATUS
			 )
	    values
			 (
			   SEQ_ALNO.nextval
			 , SEQ_APNO.currval
			 , #{empNo}
			 , #{appLevel}
			 , 0
			 )
    </insert>
    
    <!-- 참조인 insert -->
    <insert id="insertNewRefLine">
    	insert 
	      into reference
			 (
			   REF_NO
			 , APP_NO
			 , EMP_NO
			 )
	    values
			 (
			   SEQ_ARNO.nextval
			 , SEQ_APNO.currval
			 , #{empNo}
			 )
    </insert>	
    
	<!-- 상신취소, 임시저장form에서의 임시저장 -->
    <update id="resaveApproval">
    	update approval
    	   set DOC_TYPE = #{docType}
		     , DOC_TITLE = #{docTitle}
		     , DOC_CONTENT = #{docContent}
		     , DOC_ORIGINNAME = #{docOriginName}
		     , DOC_FILEPATH = #{docFilePath}
		     , APP_STATUS = 4
		     , DOC_STATUS = 'D'
		     , QUIT_DATE = #{quitDate}
		     , create_date = sysdate
		     , app_count = 0
		 where APP_NO = #{appNo}
    </update>
    
    <!-- 임시저장문서 결재 -->
    <update id="insertDrafbox">
    	update approval
    	   set  <if test="docType == 0">
    	        doc_no = '기안2023-'||(select count(doc_no)+1
							            from approval
				                       where doc_no like '기안%')
				</if>
				<if test="docType == 1">
    	        doc_no = '품의2023-'||(select count(doc_no)+1
							            from approval
				                       where doc_no like '품의%')
				</if>
				<if test="docType == 2">
    	        doc_no = '사직2023-'||(select count(doc_no)+1
									    from approval
						               where doc_no like '사직%')
				</if>
    	     , create_date = sysdate
    	     , doc_title = #{docTitle}
    	     , doc_content = #{docContent}
    	     , doc_originname = #{docOriginName}
    	     , doc_filepath = #{docFilePath}
    	     , app_status = 0
    	     , doc_status = 'Y'
    	     , app_count = #{appCount}
    	     , app_turn = 1
    	     , quit_date = #{quitDate}
         where app_no = #{appNo}
    </update>
    
    <!-- 기존 결재선 삭제 -->
    <delete id="deleteAppLine">
  		DELETE 
  		  FROM APP_LINE 
 		 WHERE app_no = #{appNo}
    </delete>
    
    <!-- 상신취소문서 재결재  -->
    
    <update id="updateApp">
    	update approval
    	   set UPDATE_DATE = sysdate
			 , DOC_TITLE = #{docTitle}
			 , DOC_CONTENT = #{docContent}
			 , DOC_ORIGINNAME = #{docOriginName}
			 , DOC_FILEPATH = #{docFilePath}
			 , APP_STATUS = 0
			 , DOC_STATUS = 'Y'
			 , APP_COUNT = #{appCount}
			 , APP_TURN = 1
			 , QUIT_DATE = #{quitDate}
    	 where APP_NO = #{appNo}
    </update>
    
    <!-- 임시저장에서의 결재선 insert -->
    <insert id="reinsertAppLine">
	    insert 
	      into app_line
			 (
			   LINE_NO
			 , APP_NO
			 , EMP_NO
			 , APP_LEVEL
			 , CONFIRM_STATUS
			 )
	    values
			 (
			   SEQ_ALNO.nextval
			 , #{appNo}
			 , #{empNo}
			 , #{appLevel}
			 , 0
			 )
    </insert>
    
    <update id="insertCancleApp">
		update approval
		   set  create_date = sysdate
		      , doc_title = #{docTitle}
		      , doc_content = #{docContent}
		      , doc_originname = #{docOriginName}
		      , doc_filepath = #{docFilePath}
		      , app_status = 0
		      , doc_status = 'Y'
		      , app_count = #{appCount}
		      , app_turn = 1
		      , quit_date = #{quitDate}
	      where app_no = #{appNo}
    </update>
    
    <!-- 참조 문서 게시글 수 카운트 -->
	<select id="selectRefListCount" resultType="_int">
		select
		       count(*)
		  from approval ap
		  join reference ref on (ap.app_no = ref.app_no)
		 where ref.emp_no = #{empNo}
		   and doc_status ='Y'
	</select>
    
    <!-- 참조문서 리스트 조회 -->
	<select id="selectRefList" resultMap="approvalResult">
		select  
	          ap.app_no
	        , emp_name
	        , decode(doc_type,0,'기안서',1,'품의서',2,'사직서') as "doc_type"
	        , to_char(create_date, 'YYYY-MM-DD')"create_date"
	        , doc_title
	        , doc_originname
	        , decode(app_status,0,'결재대기',1,'진행중',2,'결재완료',3,'반려',4,'임시저장') as "app_status"
	     from approval ap
	     join employee e on (ap.emp_no = e.emp_no)
	     join reference ref on (ap.app_no = ref.app_no)
	    where doc_status='Y'
	      and ref.emp_no = #{empNo}
	    order
	       by create_date desc
    </select>
    

	
	<select id="selectCurrentAppNo" resultType="_int">
		select 
		       seq_apno.currval 
		  from dual
	</select>
	
	<select id="selectAppInfo" resultMap="approvalResult">
		select
		       a.app_no
		     , doc_no
		     , app_count
		     , app_turn
		     , decode(app_status,0,'결재대기',1,'진행중',2,'결재완료',3,'반려',4,'임시저장') as "app_status"
		     , a.emp_no
		     , al.emp_no "target_no"
		  from approval a
		  left
		  join app_line al on (al.app_no = a.app_no)
		 where a.app_no = #{newAppNo}
		   and app_turn = app_level
	</select>
    
</mapper>
